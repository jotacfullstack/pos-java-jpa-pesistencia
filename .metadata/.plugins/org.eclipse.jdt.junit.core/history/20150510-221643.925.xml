<?xml version="1.0" encoding="UTF-8"?><testrun name="ProjetoPorEmpregadoTest" project="ProjectManagementAula05e06" tests="2" started="2" failures="0" errors="1" ignored="0">
  <testsuite name="br.edu.unitri.projectmanager.ProjetoPorEmpregadoTest" time="2.098">
    <testcase name="listaProjetoPorEmpregados" classname="br.edu.unitri.projectmanager.ProjetoPorEmpregadoTest" time="1.845"/>
    <testcase name="adicionaProjetoPorEmpregadoProjetoPorEmpregados" classname="br.edu.unitri.projectmanager.ProjetoPorEmpregadoTest" time="0.253">
      <error>javax.persistence.EntityExistsException: a different object with the same identifier value was already associated with the session: [br.edu.unitri.projectmanager.domain.ProjetoPorEmpregado#br.edu.unitri.projectmanager.domain.ProjetoPorEmpregadoPK@2b4c1d96]
	at org.hibernate.ejb.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1333)
	at org.hibernate.ejb.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1289)
	at org.hibernate.ejb.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1295)
	at org.hibernate.ejb.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:859)
	at br.edu.unitri.projectmanager.dao.ProjetoPorEmpregadoDAO.insereProjetoPorEmpregado(ProjetoPorEmpregadoDAO.java:23)
	at br.edu.unitri.projectmanager.ProjetoPorEmpregadoTest.adicionaProjetoPorEmpregadoProjetoPorEmpregados(ProjetoPorEmpregadoTest.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
  </testsuite>
</testrun>
