package br.edu.unitri.projectmanager.domain;

import java.util.List;

import javax.persistence.Tuple;

import br.edu.unitri.projectmanager.dao.DepartamentoDAO;

public class DepartamentoTest {
	DepartamentoDAO departamentoDAO = null;

	@Before
	public void init() {
		departamentoDAO = new DepartamentoDAO();
	}

	@Test
	public void adicionaAutorLivros() {

		AutorDAO autorDAO = new AutorDAO();
		LivroDAO livroDAO = new LivroDAO();

		Livro livro1 = new Livro();
		livro1.setNome("The Battle for Your Mind");
		livro1.setPreco(20.6);
		livroDAO.insereLivro(livro1);

		Livro livro2 = new Livro();
		livro2.setNome("Differentiate or Die");
		livro2.setPreco(15.8);
		livroDAO.insereLivro(livro2);

		Livro livro3 = new Livro();
		livro3.setNome("How to Transform Your Ideas");
		livro3.setPreco(32.7);
		livroDAO.insereLivro(livro3);

		Livro livro4 = new Livro();
		livro4.setNome("Digital Fortress");
		livro4.setPreco(12.9);
		livroDAO.insereLivro(livro3);

		Livro livro5 = new Livro();
		livro5.setNome("Marketing in an Era of Competition , Change and Crisis");
		livro5.setPreco(26.8);
		livroDAO.insereLivro(livro3);

		Autor autor1 = new Autor();
		autor1.setNome("Patrick Cullen");
		autor1.getLivros().add(livro2);
		autor1.getLivros().add(livro4);
		autorDAO.insereAutor(autor1);

		Autor autor2 = new Autor();
		autor2.setNome("Fraser Seitel");
		autor2.getLivros().add(livro3);
		autorDAO.insereAutor(autor2);

		Autor autor3 = new Autor();
		autor3.setNome("Al Ries");
		autor3.getLivros().add(livro1);
		autorDAO.insereAutor(autor3);

		Autor autor4 = new Autor();
		autor4.setNome("Jack Trout");
		autor4.getLivros().add(livro1);
		autor4.getLivros().add(livro2);
		autor4.getLivros().add(livro5);
		autorDAO.insereAutor(autor4);

		Autor autor5 = new Autor();
		autor5.setNome("Steve Rivkin");
		autor5.getLivros().add(livro2);
		autor5.getLivros().add(livro3);
		autor5.getLivros().add(livro5);
		autorDAO.insereAutor(autor4);
	}

	@Test
	public void testLivrosDeAutoresComFetchJoin() {
		List<Autor> autors = autorDAO.getLivrosDeAutoresComFetchJoin();
		for (Autor autor : autors) {
			System.out.println(autor + " e seus livros: ");
			for (Livro livro : autor.getLivros()) {
				System.out.println(livro);
			}
			System.out.println();
		}
	}

	@Test
	public void testLivrosDeAutores() {
		List<Autor> autors = autorDAO.getLivrosDeAutores();
		for (Autor autor : autors) {
			System.out.println(autor + " e seus livros: ");
			for (Livro livro : autor.getLivros()) {
				System.out.println(livro);
			}
			System.out.println();
		}
	}

	@Test
	public void testeSubqueries() {
		Livro precoL = livroDAO.testeSubqueries();
		System.out.println(precoL);
	}

	@Test
	public void selectWhere() {
		Double precoMedioFilt = livroDAO.selectWhere();
		System.out.printf("Pre�o M�dio: %.2f\n", precoMedioFilt);

	}

	@Test
	public void selectComTupla() {
		List<Tuple> resultado = livroDAO.selectComTupla();
		for (Tuple tuple : resultado) {
			System.out.println(tuple.get("nomeT") + " " + tuple.get("precoT"));
		}

	}

	@Test
	public void getSomaPrecos() {
		Double total = livroDAO.getSomaPrecos();
		System.out.printf("%.2f", total);

	}

	@Test
	public void getPrecoMedio() {
		Double precoMedio = livroDAO.getPrecoMedio();
		System.out.println(precoMedio);

	}

	@Test
	public void selectAllNomesPrecosLivros() {
		List<Object[]> livros = livroDAO.selectAllNomesPrecosLivros();

		for (Object[] livro : livros) {
			System.out.println(livro[0] + " " + livro[1]);
		}

	}

	@Test
	public void selectAllNomesLivros() {
		List<String> livros = livroDAO.selectAllNomesLivros();

		for (String livro : livros) {
			System.out.println(livro);
		}

	}

	@Test
	public void selectAllLivros() {
		List<Livro> livros = livroDAO.selectAllLivros();

		for (Livro livro : livros) {
			System.out.println(livro);
		}

	}

}